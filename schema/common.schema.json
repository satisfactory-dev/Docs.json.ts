{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "common.schema.json",
	"type": "array",
	"$defs": {
		"UnrealEngineString--array": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"minItems": 1,
				"items": {
					"type": "string",
					"minLength": 1,
					"UnrealEngineString": true
				}
			}
		},
		"NativeClass": {
			"type": "object",
			"required": ["NativeClass", "Classes"],
			"properties": {
				"NativeClass": {
					"type": "string",
					"minLength": 1,
					"UnrealEngineString": {
						"left": "/Script/CoreUObject.Class",
						"right": {
							"starts_with": "/Script/FactoryGame.FG"
						},
						"quote_mode": "both"
					}
				}
			}
		},
		"class--no-description-or-display-name": {
			"type": "object",
			"required": ["ClassName"],
			"properties": {
				"ClassName": {
					"type": "string",
					"minLength": 1
				}
			}
		},
		"class--no-description": {
			"type": "object",
			"$ref": "#/$defs/class--no-description-or-display-name",
			"required": ["mDisplayName"],
			"properties": {
				"mDisplayName": {
					"type": "string"
				}
			}
		},
		"class": {
			"type": "object",
			"$ref": "#/$defs/class--no-description",
			"required": ["mDescription"],
			"properties": {
				"mDescription": {
					"type": "string"
				}
			}
		},
		"decimal-string": {
			"type": "string",
			"pattern": "^\\d+\\.\\d{6}$"
		},
		"decimal-string--signed": {
			"type": "string",
			"pattern": "^-?\\d+\\.\\d{6}$"
		},
		"integer-string": {
			"type": "string",
			"pattern": "^\\d+$"
		},
		"integer-string--signed": {
			"type": "string",
			"pattern": "^-?\\d+$"
		},
		"color": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["B", "G", "R", "A"],
				"properties": {
					"B": {
						"$ref": "common.schema.json#/$defs/integer-string"
					},
					"G": {
						"$ref": "common.schema.json#/$defs/integer-string"
					},
					"R": {
						"$ref": "common.schema.json#/$defs/integer-string"
					},
					"A": {
						"$ref": "common.schema.json#/$defs/integer-string"
					}
				}
			}
		},
		"color-decimal": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["R", "G", "B", "A"],
				"properties": {
					"R": {
						"$ref": "common.schema.json#/$defs/decimal-string"
					},
					"G": {
						"$ref": "common.schema.json#/$defs/decimal-string"
					},
					"B": {
						"$ref": "common.schema.json#/$defs/decimal-string"
					},
					"A": {
						"$ref": "common.schema.json#/$defs/decimal-string"
					}
				}
			}
		},
		"empty-object": {
			"type": "string",
			"const": "()"
		},
		"None": {
			"type": "string",
			"const": "None"
		},
		"xyz": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["X", "Y", "Z"],
				"properties": {
					"X": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					},
					"Y": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					},
					"Z": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					}
				}
			}
		},
		"xy": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["X", "Y"],
				"properties": {
					"X": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					},
					"Y": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					}
				}
			}
		},
		"xy--integer": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["X", "Y"],
				"properties": {
					"X": {
						"$ref": "common.schema.json#/$defs/integer-string"
					},
					"Y": {
						"$ref": "common.schema.json#/$defs/integer-string"
					}
				}
			}
		},
		"quaternion": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["X", "Y", "Z", "W"],
				"properties": {
					"X": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					},
					"Y": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					},
					"Z": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					},
					"W": {
						"$ref": "common.schema.json#/$defs/decimal-string"
					}
				}
			}
		},
		"pitch-yaw-roll": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["Pitch", "Yaw", "Roll"],
				"properties": {
					"Pitch": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					},
					"Yaw": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					},
					"Roll": {
						"$ref": "common.schema.json#/$defs/decimal-string--signed"
					}
				}
			}
		},
		"xyz--integer": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["X", "Y", "Z"],
				"properties": {
					"X": {
						"$ref": "common.schema.json#/$defs/integer-string"
					},
					"Y": {
						"$ref": "common.schema.json#/$defs/integer-string"
					},
					"Z": {
						"$ref": "common.schema.json#/$defs/integer-string"
					}
				}
			}
		},
		"xyz-array": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"minItems": 1,
				"items": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"required": ["X", "Y", "Z"],
						"properties": {
							"X": {
								"$ref": "common.schema.json#/$defs/decimal-string"
							},
							"Y": {
								"$ref": "common.schema.json#/$defs/decimal-string--signed"
							},
							"Z": {
								"$ref": "common.schema.json#/$defs/decimal-string--signed"
							}
						}
					}
				}
			}
		},
		"boolean": {
			"type": "string",
			"enum": ["True", "False"]
		},
		"boolean-extended": {
			"type": "string",
			"enum": ["True", "False", ""]
		},
		"Texture2D": {
			"oneOf": [
				{
					"type": "string",
					"string_starts_with": "Texture2D /Game/FactoryGame/"
				},
				{
					"$ref": "common.schema.json#/$defs/None"
				},
				{
					"type": "string",
					"minLength": 1,
					"UnrealEngineString": {
						"left": "/Script/Engine.Texture2D",
						"quote_mode": "both"
					}
				}
			]
		},
		"transformation": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["Rotation", "Translation", "Scale3D"],
				"properties": {
					"Rotation": {
						"$ref": "common.schema.json#/$defs/quaternion"
					},
					"Translation": {
						"$ref": "common.schema.json#/$defs/xyz"
					},
					"Scale3D": {
						"$ref": "common.schema.json#/$defs/xyz"
					}
				}
			}
		},
		"mForm": {
			"type": "string",
			"enum": ["RF_SOLID", "RF_LIQUID", "RF_GAS", "RF_INVALID"]
		},
		"ItemClass": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"minItems": 1,
				"items": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"required": ["ItemClass"],
						"properties": {
							"ItemClass": {
								"type": "string",
								"minLength": 1,
								"UnrealEngineString": true
							},
							"Amount": {
								"$ref": "common.schema.json#/$defs/integer-string"
							}
						}
					}
				}
			}
		},
		"ItemClass--amount-required": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"minItems": 1,
				"items": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"required": ["ItemClass", "Amount"],
						"properties": {
							"ItemClass": {
								"type": "string",
								"minLength": 1,
								"UnrealEngineString": true
							},
							"Amount": {
								"$ref": "common.schema.json#/$defs/integer-string"
							}
						}
					}
				}
			}
		},
		"common-base--FGItemDescriptor--FGBuildingDescriptor--FGResourceDescriptor": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/class",
			"required": [
				"mAbbreviatedDisplayName",
				"mStackSize",
				"mCanBeDiscarded",
				"mRememberPickUp",
				"mEnergyValue",
				"mRadioactiveDecay",
				"mSmallIcon",
				"mPersistentBigIcon",
				"mCrosshairMaterial",
				"mDescriptorStatBars",
				"mMenuPriority",
				"mFluidColor",
				"mGasColor",
				"mCompatibleItemDescriptors",
				"mScannableType",
				"mShouldOverrideScannerDisplayText",
				"mScannerDisplayText",
				"mScannerLightColor"
			],
			"properties": {
				"mAbbreviatedDisplayName": {
					"type": "string"
				},
				"mStackSize": {
					"type": "string",
					"enum": [
						"SS_ONE",
						"SS_FLUID",
						"SS_SMALL",
						"SS_MEDIUM",
						"SS_BIG",
						"SS_HUGE"
					]
				},
				"mCanBeDiscarded": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mRememberPickUp": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mEnergyValue": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mRadioactiveDecay": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mSmallIcon": {
					"$ref": "common.schema.json#/$defs/Texture2D"
				},
				"mPersistentBigIcon": {
					"$ref": "common.schema.json#/$defs/Texture2D"
				},
				"mCrosshairMaterial": {
					"oneOf": [
						{
							"type": "string",
							"enum": ["", "None"]
						},
						{
							"type": "string",
							"string_starts_with": "/Game/FactoryGame/Interface/UI/Material/Crosshairs/"
						}
					]
				},
				"mDescriptorStatBars": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"minItems": 1,
								"items": {
									"type": "string",
									"minLength": 1,
									"typed_string": {
										"required": ["Value"],
										"properties": {
											"Value": {
												"$ref": "common.schema.json#/$defs/integer-string"
											}
										}
									}
								}
							}
						}
					]
				},
				"mMenuPriority": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mFluidColor": {
					"$ref": "common.schema.json#/$defs/color"
				},
				"mGasColor": {
					"$ref": "common.schema.json#/$defs/color"
				},
				"mCompatibleItemDescriptors": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"minItems": 1,
								"items": {
									"type": "string",
									"minLength": 1,
									"typed_string": {
										"required": [
											"CompatibleItemType",
											"CompatibleItemDescriptors"
										],
										"properties": {
											"CompatibleItemType": {
												"type": "string",
												"enum": [
													"CIT_AMMO",
													"CIT_WEAPON"
												]
											},
											"CompatibleItemDescriptors": {
												"$ref": "common.schema.json#/$defs/UnrealEngineString--array"
											}
										}
									}
								}
							}
						}
					]
				},
				"mScannableType": {
					"type": "string",
					"enum": [
						"RTWOT_Default",
						"RTWOT_WeakSignal",
						"RTWOT_Flora"
					]
				},
				"mShouldOverrideScannerDisplayText": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mScannerDisplayText": {
					"type": "string"
				},
				"mScannerLightColor": {
					"$ref": "common.schema.json#/$defs/color"
				}
			}
		},
		"common-base--FGItemDescriptor--FGResourceDescriptor--FGPoleDescriptor": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGItemDescriptor--FGBuildingDescriptor--FGResourceDescriptor",
			"required": ["mSubCategories", "mForm"],
			"properties": {
				"mSubCategories": {
					"$ref": "common.schema.json#/$defs/common-base--FGItemDescriptor--FGResourceDescriptor--FGPoleDescriptor--mSubCategories"
				},
				"mForm": {
					"$ref": "common.schema.json#/$defs/mForm"
				}
			}
		},
		"common-base--FGItemDescriptor--FGResourceDescriptor--FGPoleDescriptor--mSubCategories": {
			"oneOf": [
				{
					"type": "string",
					"const": ""
				},
				{
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"type": "string",
							"minLength": 1,
							"UnrealEngineString": {
								"right": {
									"starts_with": "/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Transport/"
								}
							}
						}
					}
				}
			]
		},
		"common-base--FGItemDescriptor--FGResourceDescriptor": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGItemDescriptor--FGResourceDescriptor--FGPoleDescriptor",
			"required": ["mResourceSinkPoints"],
			"properties": {
				"mResourceSinkPoints": {
					"$ref": "common.schema.json#/$defs/integer-string"
				}
			}
		},
		"common-base--FGBuildingDescriptor": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGItemDescriptor--FGBuildingDescriptor--FGResourceDescriptor",
			"required": ["mForm", "mSubCategories", "ClassName"],
			"properties": {
				"ClassName": {
					"$ref": "common.schema.json#/$defs/common-base--FGBuildingDescriptor--ClassName"
				},
				"mForm": {
					"$ref": "common.schema.json#/$defs/common-base--FGBuildingDescriptor--mForm"
				},
				"mSubCategories": {
					"$ref": "common.schema.json#/$defs/common-base--FGBuildingDescriptor--mSubCategories"
				}
			}
		},
		"common-base--FGBuildingDescriptor--ClassName": {
			"type": "string",
			"minLength": 1,
			"not": {
				"type": "string",
				"enum": [
					"Desc_ConveyorPole_C",
					"Desc_PipelineSupport_C",
					"Desc_PipeSupportStackable_C",
					"Desc_HyperPoleStackable_C",
					"Desc_PipeHyperSupport_C",
					"Desc_ConveyorPoleStackable_C"
				]
			}
		},
		"common-base--FGBuildingDescriptor--mForm": {
			"type": "string",
			"const": "RF_INVALID"
		},
		"common-base--FGBuildingDescriptor--mSubCategories": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"minItems": 1,
				"items": {
					"type": "string",
					"minLength": 1,
					"UnrealEngineString": {
						"right": {
							"starts_with": [
								"/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Special/",
								"/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Walls/",
								"/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Transport/",
								"/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Power/",
								"/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Production/",
								"/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Organisation/"
							]
						}
					}
				}
			}
		},
		"common-base--FGBuildable--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/class",
			"required": [
				"MaxRenderDistance",
				"mAlternativeMaterialRecipes",
				"mContainsComponents",
				"mIsConsideredForBaseWeightValue",
				"mBuildEffectSpeed",
				"mAllowColoring",
				"mAllowPatterning",
				"mSkipBuildEffect",
				"mForceNetUpdateOnRegisterPlayer",
				"mToggleDormancyOnInteraction",
				"mIsMultiSpawnedBuildable",
				"mShouldShowAttachmentPointVisuals",
				"mCanContainLightweightInstances",
				"mAffectsOcclusion",
				"mOcclusionShape",
				"mScaleCustomOffset",
				"mCustomScaleType",
				"mOcclusionBoxInfo",
				"mAttachmentPoints",
				"mInteractingPlayers",
				"mIsUseable",
				"mHideOnBuildEffectStart",
				"mShouldModifyWorldGrid"
			],
			"properties": {
				"MaxRenderDistance": {
					"$ref": "common.schema.json#/$defs/decimal-string--signed"
				},
				"mAlternativeMaterialRecipes": {
					"oneOf": [
						{
							"type": "string",
							"minLength": 0
						},
						{
							"type": "array",
							"minItems": 1,
							"items": {
								"type": "object",
								"required": ["mMaterial", "mRecipe"],
								"properties": {
									"mMaterial": {
										"type": "string",
										"minLength": 1
									},
									"mRecipe": {
										"type": "string",
										"minLength": 1
									}
								}
							}
						}
					]
				},
				"mContainsComponents": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mIsConsideredForBaseWeightValue": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mBuildEffectSpeed": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mAllowColoring": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mAllowPatterning": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mSkipBuildEffect": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mForceNetUpdateOnRegisterPlayer": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mToggleDormancyOnInteraction": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mIsMultiSpawnedBuildable": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mShouldShowAttachmentPointVisuals": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mCanContainLightweightInstances": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mAffectsOcclusion": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mOcclusionShape": {
					"type": "string",
					"enum": [
						"ROCS_Box",
						"ROCS_Ramp",
						"ROCS_Box_Special",
						"ROCS_CornerRamp"
					]
				},
				"mScaleCustomOffset": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCustomScaleType": {
					"type": "string",
					"enum": ["ROCSS_Center", "ROCSS_Top", "ROCSS_Bot"]
				},
				"mOcclusionBoxInfo": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"minItems": 1,
								"items": {
									"type": "string",
									"minLength": 1,
									"typed_string": {
										"required": ["Min", "Max", "IsValid"],
										"properties": {
											"Min": {
												"$ref": "common.schema.json#/$defs/xyz"
											},
											"Max": {
												"$ref": "common.schema.json#/$defs/xyz"
											},
											"IsValid": {
												"$ref": "common.schema.json#/$defs/boolean"
											}
										}
									}
								}
							}
						}
					]
				},
				"mAttachmentPoints": {
					"type": "string",
					"const": ""
				},
				"mInteractingPlayers": {
					"type": "string",
					"const": ""
				},
				"mIsUseable": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mHideOnBuildEffectStart": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mShouldModifyWorldGrid": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mBlueprintBuildEffectID": {
					"$ref": "common.schema.json#/$defs/integer-string--signed"
				}
			}
		},
		"mEventType": {
			"type": "string",
			"enum": ["EV_Christmas"]
		},
		"mEventType--optional-csv": {
			"oneOf": [
				{
					"type": "string",
					"const": ""
				},
				{
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"$ref": "common.schema.json#/$defs/mEventType"
						}
					}
				}
			]
		},
		"common-base--FGCustomizationRecipe--FGRecipe": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/class--no-description",
			"required": [
				"FullName",
				"mDisplayName",
				"mIngredients",
				"mProduct",
				"mManufacturingMenuPriority",
				"mManufactoringDuration",
				"mManualManufacturingMultiplier",
				"mProducedIn",
				"mRelevantEvents",
				"mVariablePowerConsumptionConstant",
				"mVariablePowerConsumptionFactor"
			],
			"properties": {
				"FullName": {
					"type": "string",
					"pattern": "^BlueprintGeneratedClass /Game/FactoryGame/(?:-?[A-Z][A-Za-z0-9_]+/)*(Recipe_[A-Za-z0-9_]+)\\.\\1_C$"
				},
				"mDisplayName": {
					"type": "string",
					"minLength": 1
				},
				"mIngredients": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"$ref": "common.schema.json#/$defs/ItemClass"
						}
					]
				},
				"mProduct": {
					"oneOf": [
						{"type": "string", "const": ""},
						{"$ref": "common.schema.json#/$defs/ItemClass"}
					]
				},
				"mManufacturingMenuPriority": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mManufactoringDuration": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mManualManufacturingMultiplier": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mRelevantEvents": {
					"$ref": "common.schema.json#/$defs/mEventType--optional-csv"
				},
				"mVariablePowerConsumptionConstant": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mVariablePowerConsumptionFactor": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"SpecifiedColor": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["SpecifiedColor"],
				"properties": {
					"SpecifiedColor": {
						"$ref": "common.schema.json#/$defs/color-decimal"
					}
				}
			}
		},
		"common-base--FGBuildable--consumes-power-base": {
			"type": "object",
			"$ref": "#/$defs/common-base--FGBuildable--base",
			"required": [
				"mPowerConsumption",
				"mPowerConsumptionExponent",
				"mDoesHaveShutdownAnimation",
				"mOnHasPowerChanged",
				"mOnHasProductionChanged",
				"mOnHasStandbyChanged",
				"mMinimumProducingTime",
				"mMinimumStoppedTime",
				"mCanEverMonitorProductivity",
				"mCanChangePotential",
				"mMinPotential",
				"mMaxPotential",
				"mFluidStackSizeDefault",
				"mFluidStackSizeMultiplier",
				"mEffectUpdateInterval",
				"mDefaultProductivityMeasurementDuration",
				"mLastProductivityMeasurementProduceDuration",
				"mLastProductivityMeasurementDuration",
				"mCurrentProductivityMeasurementProduceDuration",
				"mCurrentProductivityMeasurementDuration",
				"mProductivityMonitorEnabled",
				"mCachedSkeletalMeshes",
				"mAddToSignificanceManager",
				"mSignificanceRange",
				"mTickExponent"
			],
			"properties": {
				"mPowerConsumption": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mPowerConsumptionExponent": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDoesHaveShutdownAnimation": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mOnHasPowerChanged": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mOnHasProductionChanged": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mOnHasStandbyChanged": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mMinimumProducingTime": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mMinimumStoppedTime": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCanEverMonitorProductivity": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mCanChangePotential": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mMinPotential": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mMaxPotential": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mFluidStackSizeDefault": {
					"type": "string",
					"const": "SS_FLUID"
				},
				"mFluidStackSizeMultiplier": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mEffectUpdateInterval": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDefaultProductivityMeasurementDuration": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mLastProductivityMeasurementProduceDuration": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mLastProductivityMeasurementDuration": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCurrentProductivityMeasurementProduceDuration": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCurrentProductivityMeasurementDuration": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mProductivityMonitorEnabled": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mCachedSkeletalMeshes": {
					"type": "string",
					"const": ""
				},
				"mAddToSignificanceManager": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mSignificanceRange": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mTickExponent": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGBuildable--docking-station-base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--consumes-power-base",
			"required": [
				"mStorageSizeX",
				"mStorageSizeY",
				"mTransferSpeed",
				"mStackTransferSize"
			],
			"properties": {
				"mStorageSizeX": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mStorageSizeY": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mTransferSpeed": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mStackTransferSize": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGBuildableDroneStation": {
			"type": "object",
			"$ref": "#/$defs/common-base--FGBuildable--docking-station-base",
			"required": [
				"mStoppedProducingAnimationSounds",
				"mStoppedAkComponents",
				"mSocketStoppedAkComponents",
				"m_DockingStates",
				"m_OffsetTime",
				"mDroneDockingStartLocationLocal",
				"mDroneDockingLocationLocal",
				"mDroneDockingQueue",
				"mStationHasDronesInQueue",
				"mItemTransferringStage",
				"mTransferProgress",
				"mDroneQueueRadius",
				"mDroneQueueSeparationRadius",
				"mDroneQueueVerticalSeparation",
				"mTripPowerCost",
				"mTripPowerPerMeterCost",
				"mTripInformationSampleCount",
				"mMapText"
			],
			"properties": {
				"ClassName": {
					"type": "string",
					"const": "Build_DroneStation_C"
				},
				"mDisplayName": {
					"type": "string",
					"const": "Drone Port"
				},
				"mStoppedProducingAnimationSounds": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mStoppedAkComponents": {
					"$ref": "common.schema.json#/$defs/boolean-extended"
				},
				"mSocketStoppedAkComponents": {
					"type": "string",
					"const": ""
				},
				"m_DockingStates": {
					"type": "string",
					"const": "DS_UNDOCKED"
				},
				"m_OffsetTime": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDroneDockingStartLocationLocal": {
					"$ref": "common.schema.json#/$defs/xyz"
				},
				"mDroneDockingLocationLocal": {
					"$ref": "common.schema.json#/$defs/xyz"
				},
				"mDroneDockingQueue": {
					"type": "string",
					"const": ""
				},
				"mStationHasDronesInQueue": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mItemTransferringStage": {
					"type": "string",
					"const": "ITS_NONE"
				},
				"mTransferProgress": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDroneQueueRadius": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDroneQueueSeparationRadius": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDroneQueueVerticalSeparation": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mTripPowerCost": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mTripPowerPerMeterCost": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mTripInformationSampleCount": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mMapText": {
					"type": "string",
					"const": ""
				}
			}
		},
		"common-base--FGRecipe": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGCustomizationRecipe--FGRecipe",
			"properties": {
				"mProduct": {
					"$ref": "common.schema.json#/$defs/ItemClass--amount-required"
				}
			}
		},
		"common-base--FGBuildableBlueprintDesigner": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": [
				"mTerminalDistanceFromEdge",
				"mTerminalHalfDepth",
				"mDimensions",
				"OnRecordDataChanged",
				"OnBlueprintCostChanged",
				"mCurrentCost",
				"mBuildables",
				"mCurrentRecordData",
				"mIsDismantlingAll"
			],
			"properties": {
				"mTerminalDistanceFromEdge": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mTerminalHalfDepth": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDimensions": {
					"$ref": "common.schema.json#/$defs/xyz--integer"
				},
				"OnRecordDataChanged": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"OnBlueprintCostChanged": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mCurrentCost": {
					"type": "string",
					"const": ""
				},
				"mBuildables": {
					"type": "string",
					"const": ""
				},
				"mIsDismantlingAll": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--FGBuildable--occupied": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": ["mOccupiedText"],
			"properties": {
				"mOccupiedText": {
					"type": "string",
					"pattern": " occupied!?$"
				}
			}
		},
		"common-base--FGBuildable--tiered": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": ["Tier"],
			"properties": {
				"Tier": {
					"$ref": "common.schema.json#/$defs/integer-string"
				}
			}
		},
		"common-base--FGBuildable--pole--base--no-static": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": ["mCanStack", "mStackHeight"],
			"properties": {
				"mCanStack": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mStackHeight": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGBuildable--pole--base--with-static": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--pole--base--no-static",
			"required": ["mUseStaticHeight"],
			"properties": {
				"mUseStaticHeight": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--FGBuildablePoleLightweight": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--pole--base--with-static",
			"required": ["mHeight", "mSelectedPoleVersion"],
			"properties": {
				"mHeight": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mSelectedPoleVersion": {
					"$ref": "common.schema.json#/$defs/integer-string--signed"
				}
			}
		},
		"common-base--FGPoleDescriptor": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGItemDescriptor--FGResourceDescriptor--FGPoleDescriptor",
			"required": ["mSubCategories", "mForm"],
			"properties": {
				"mForm": {
					"type": "string",
					"const": "RF_INVALID"
				},
				"mSubCategories": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"type": "string",
							"minLength": 1,
							"UnrealEngineString": {
								"right": [
									"/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Transport/SC_ConverPole.SC_ConverPole_C",
									"/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Transport/SC_PipeSupport.SC_PipeSupport_C",
									"/Game/FactoryGame/Interface/UI/InGame/BuildMenu/BuildCategories/Sub_Transport/SC_HyperTubes.SC_HyperTubes_C"
								]
							}
						}
					}
				}
			}
		},
		"common-base--FGBuildableConveyorBelt--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": ["mItemMeshMap", "mSpeed", "mConveyorChainFlags"],
			"properties": {
				"mItemMeshMap": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mSpeed": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mConveyorChainFlags": {
					"$ref": "common.schema.json#/$defs/integer-string"
				}
			}
		},
		"common-base--FGBuildableConveyorBelt": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildableConveyorBelt--base",
			"required": ["mMeshLength", "mSplineData", "mCustomSkins"],
			"properties": {
				"mMeshLength": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mSplineData": {
					"type": "string",
					"const": ""
				},
				"mCustomSkins": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"type": "string",
							"enum": [
								"/Game/FactoryGame/Buildable/-Shared/Customization/Skins/SkinDesc_Test1.SkinDesc_Test1_C"
							]
						}
					}
				}
			}
		},
		"common-base--FGBuildableConveyorLift": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildableConveyorBelt--base",
			"required": [
				"mMeshHeight",
				"mIsReversed",
				"mTopTransform",
				"mSnappedPassthroughs"
			],
			"properties": {
				"mMeshHeight": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mIsReversed": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mTopTransform": {
					"$ref": "common.schema.json#/$defs/transformation"
				},
				"mSnappedPassthroughs": {
					"$ref": "common.schema.json#/$defs/common-base--mSnappedPassthroughs"
				}
			}
		},
		"common-base--mSnappedPassthroughs": {
			"type": "string",
			"const": ""
		},
		"common-base--FGBuildable--pipeline-accessory--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--consumes-power-base",
			"required": ["mFluidBox", "mPipeConnections"],
			"properties": {
				"mFluidBox": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mPipeConnections": {
					"type": "string",
					"const": ""
				}
			}
		},
		"common-base--FGBuildable--pipeline-accessory": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--pipeline-accessory--base",
			"required": [
				"mRadius",
				"mFluidBoxVolume",
				"mFluidBox",
				"mPipeConnections"
			],
			"properties": {
				"mRadius": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mFluidBoxVolume": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mFluidBox": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mPipeConnections": {
					"type": "string",
					"const": ""
				}
			}
		},
		"common-base--FGBuildablePipelineJunction": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--pipeline-accessory"
		},
		"common-base--FGBuildable--pipeline-flow-accessory": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--pipeline-accessory",
			"required": [
				"mLastFlowUpdate",
				"mUpdateFlowTime",
				"mAnimSpeed",
				"mLastFlowValue",
				"mTimeScaleOffset",
				"mMaxPressure",
				"mDesignPressure",
				"mDefaultFlowLimit",
				"mUserFlowLimit",
				"mMinimumFlowPercentForStandby",
				"mIndicatorData"
			],
			"properties": {
				"mLastFlowUpdate": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mUpdateFlowTime": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mAnimSpeed": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mLastFlowValue": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mTimeScaleOffset": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mMaxPressure": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDesignPressure": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDefaultFlowLimit": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mUserFlowLimit": {
					"$ref": "common.schema.json#/$defs/decimal-string--signed"
				},
				"mMinimumFlowPercentForStandby": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mIndicatorData": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mPistonAudioTimer": {
					"$ref": "common.schema.json#/$defs/empty-object"
				}
			}
		},
		"common-base--FGBuildablePipelinePump": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--pipeline-flow-accessory",
			"required": [
				"mIsPipePumpPlaying",
				"mIsExceedingHeadLift",
				"mCurrentAudioHeadLift"
			],
			"properties": {
				"mIsPipePumpPlaying": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mIsExceedingHeadLift": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mCurrentAudioHeadLift": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGBuildablePipelinePump--valve": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--pipeline-flow-accessory"
		},
		"common-base--FGBuildablePipeReservoir": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--pipeline-accessory--base",
			"required": [
				"mStackingHeight",
				"mStorageCapacity",
				"mIndicatorData"
			],
			"properties": {
				"mStackingHeight": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mStorageCapacity": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mIndicatorData": {
					"$ref": "common.schema.json#/$defs/empty-object"
				}
			}
		},
		"common-base--FGBuildableMAM": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--occupied",
			"required": ["mCurrentResearchState", "mSignificanceRange"],
			"properties": {
				"mCurrentResearchState": {
					"type": "string",
					"enum": ["ERS_NotResearching"]
				},
				"mSignificanceRange": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGSchematic--base": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": [
				"FullName",
				"mType",
				"mSubCategories",
				"mMenuPriority",
				"mTechTier",
				"mCost",
				"mTimeToComplete",
				"mRelevantShopSchematics",
				"mIsPlayerSpecific",
				"mSchematicIcon",
				"mSmallSchematicIcon",
				"mDependenciesBlocksSchematicAccess",
				"mHiddenUntilDependenciesMet",
				"mRelevantEvents",
				"mIncludeInBuilds"
			],
			"properties": {
				"FullName": {
					"type": "string",
					"pattern": "^BlueprintGeneratedClass /Game/FactoryGame/(Schematics|Events/Christmas)/"
				},
				"mType": {
					"type": "string",
					"minLength": 1
				},
				"mSubCategories": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"minItems": 1,
								"items": {
									"$ref": "common.schema.json#/$defs/None"
								}
							}
						},
						{
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"minItems": 1,
								"items": {
									"type": "string",
									"minLength": 1,
									"UnrealEngineString": {
										"right": {
											"starts_with": "/Game/FactoryGame/Schematics/"
										}
									}
								}
							}
						}
					]
				},
				"mMenuPriority": {
					"$ref": "#/$defs/decimal-string--signed"
				},
				"mTechTier": {
					"$ref": "#/$defs/integer-string"
				},
				"mCost": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"$ref": "#/$defs/ItemClass"
						}
					]
				},
				"mTimeToComplete": {
					"$ref": "#/$defs/decimal-string"
				},
				"mRelevantShopSchematics": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"minItems": 1,
								"items": {
									"oneOf": [
										{
											"type": "string",
											"minLength": 1,
											"UnrealEngineString": {
												"right": {
													"starts_with": "/Game/FactoryGame/Schematics/ResourceSink/"
												}
											}
										},
										{
											"$ref": "common.schema.json#/$defs/None"
										}
									]
								}
							}
						}
					]
				},
				"mIsPlayerSpecific": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mSchematicIcon": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"required": [
							"DrawAs",
							"ImageSize",
							"Margin",
							"TintColor",
							"OutlineSettings",
							"UVRegion"
						],
						"properties": {
							"DrawAs": {
								"type": "string",
								"const": "Image"
							},
							"ImageSize": {
								"$ref": "common.schema.json#/$defs/xy"
							},
							"Margin": {
								"$ref": "common.schema.json#/$defs/empty-object"
							},
							"TintColor": {
								"$ref": "common.schema.json#/$defs/SpecifiedColor"
							},
							"OutlineSettings": {
								"type": "string",
								"minLength": 1,
								"typed_string": {
									"required": [
										"CornerRadii",
										"Color",
										"RoundingType"
									],
									"properties": {
										"CornerRadii": {
											"$ref": "common.schema.json#/$defs/quaternion"
										},
										"Color": {
											"$ref": "common.schema.json#/$defs/SpecifiedColor"
										},
										"RoundingType": {
											"type": "string",
											"const": "HalfHeightRadius"
										}
									}
								}
							},
							"ResourceObject": {
								"$ref": "common.schema.json#/$defs/Texture2D"
							},
							"UVRegion": {
								"type": "string",
								"minLength": 1,
								"typed_string": {
									"required": ["Min", "Max", "bIsValid"],
									"properties": {
										"Min": {
											"$ref": "common.schema.json#/$defs/xy"
										},
										"Max": {
											"$ref": "common.schema.json#/$defs/xy"
										},
										"bIsValid": {
											"$ref": "common.schema.json#/$defs/boolean"
										}
									}
								}
							}
						}
					}
				},
				"mSmallSchematicIcon": {
					"$ref": "common.schema.json#/$defs/Texture2D"
				},
				"mDependenciesBlocksSchematicAccess": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mHiddenUntilDependenciesMet": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mRelevantEvents": {
					"$ref": "common.schema.json#/$defs/mEventType--optional-csv"
				},
				"mIncludeInBuilds": {
					"type": "string",
					"enum": ["IIB_PublicBuilds"]
				}
			}
		},
		"common-base--FGSchematic--mUnlocks_Class": {
			"type": "object",
			"required": ["Class"],
			"properties": {
				"Class": {
					"type": "string",
					"minLength": 1
				}
			}
		},
		"FGSchematic--mUnlocks_mSchematics--mSchematics": {
			"type": "string",
			"minLength": 1,
			"UnrealEngineString": {
				"left": "/Script/Engine.BlueprintGeneratedClass",
				"right": {
					"starts_with": [
						"/Game/FactoryGame/Schematics/",
						"/Game/FactoryGame/Events/Christmas/"
					]
				},
				"quote_mode": "both"
			}
		},
		"FGSchematic--mUnlocks_mTapeUnlocks": {
			"type": "object",
			"required": ["Class", "mTapeUnlocks"],
			"additionalProperties": false,
			"properties": {
				"Class": {
					"type": "string",
					"const": "FGUnlockTape"
				},
				"mTapeUnlocks": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"type": "string",
							"minLength": 1,
							"UnrealEngineString": {
								"right": {
									"starts_with": "/Game/FactoryGame/Resource/Tape/"
								}
							}
						}
					}
				}
			}
		},
		"FGSchematic--mUnlocks_mRecipes": {
			"type": "object",
			"required": ["Class", "mRecipes"],
			"additionalProperties": false,
			"properties": {
				"Class": {
					"type": "string",
					"enum": ["BP_UnlockRecipe_C", "BP_UnlockBlueprints_C"]
				},
				"mRecipes": {
					"$ref": "common.schema.json#/$defs/UnrealEngineString--array"
				}
			}
		},
		"FGSchematic--mUnlocks_resources_to_scan": {
			"type": "object",
			"required": [
				"Class",
				"mResourcesToAddToScanner",
				"mResourcePairsToAddToScanner"
			],
			"additionalProperties": false,
			"properties": {
				"Class": {
					"type": "string",
					"const": "BP_UnlockScannableResource_C"
				},
				"mResourcesToAddToScanner": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"minItems": 1,
								"items": {
									"type": "string",
									"minLength": 1,
									"UnrealEngineString": {
										"right": {
											"starts_with": "/Game/FactoryGame/Resource/"
										}
									}
								}
							}
						}
					]
				},
				"mResourcePairsToAddToScanner": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"required": ["ResourceDescriptor"],
								"properties": {
									"ResourceDescriptor": {
										"type": "string",
										"minLength": 1,
										"UnrealEngineString": true
									},
									"ResourceNodeType": {
										"type": "string",
										"enum": ["FrackingCore", "Geyser"]
									}
								}
							}
						}
					}
				}
			}
		},
		"FGSchematic--mUnlocks_mEmotes": {
			"type": "object",
			"required": ["Class", "mEmotes"],
			"additionalProperties": false,
			"properties": {
				"Class": {
					"type": "string",
					"const": "BP_UnlockEmote_C"
				},
				"mEmotes": {
					"$ref": "common.schema.json#/$defs/UnrealEngineString--array"
				}
			}
		},
		"FGSchematic--mUnlocks_mSchematics": {
			"type": "object",
			"required": ["Class", "mSchematics"],
			"additionalProperties": false,
			"properties": {
				"Class": {
					"type": "string",
					"const": "BP_UnlockSchematic_C"
				},
				"mSchematics": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_mSchematics--mSchematics"
						}
					}
				}
			}
		},
		"FGSchematic--mUnlocks_inventory_slots": {
			"type": "object",
			"required": ["Class", "mNumInventorySlotsToUnlock"],
			"additionalProperties": false,
			"properties": {
				"Class": {
					"type": "string",
					"const": "BP_UnlockInventorySlot_C"
				},
				"mNumInventorySlotsToUnlock": {
					"$ref": "common.schema.json#/$defs/integer-string"
				}
			}
		},
		"FGSchematic--mUnlocks_equipment_slots": {
			"type": "object",
			"required": ["Class", "mNumArmEquipmentSlotsToUnlock"],
			"additionalProperties": false,
			"properties": {
				"Class": {
					"type": "string",
					"const": "BP_UnlockArmEquipmentSlot_C"
				},
				"mNumArmEquipmentSlotsToUnlock": {
					"$ref": "common.schema.json#/$defs/integer-string"
				}
			}
		},
		"FGSchematic--mUnlocks_mScannableObjects": {
			"type": "object",
			"required": ["Class", "mScannableObjects"],
			"additionalProperties": false,
			"properties": {
				"Class": {
					"type": "string",
					"const": "BP_UnlockScannableObject_C"
				},
				"mScannableObjects": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"required": [
									"ItemDescriptor",
									"ActorsAllowedToScan"
								],
								"properties": {
									"ItemDescriptor": {
										"type": "string",
										"minLength": 1,
										"UnrealEngineString": true
									},
									"ActorsAllowedToScan": {
										"type": "string",
										"minLength": 1,
										"typed_string": {
											"minItems": 1,
											"items": {
												"type": "string",
												"minLength": 1,
												"UnrealEngineString": {
													"left": "/Script/CoreUObject.Class"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"FGSchematic--mUnlocks_mItemsToGive": {
			"type": "object",
			"required": ["Class", "mItemsToGive"],
			"additionalProperties": false,
			"properties": {
				"Class": {
					"type": "string",
					"const": "BP_UnlockGiveItem_C"
				},
				"mItemsToGive": {
					"$ref": "common.schema.json#/$defs/ItemClass"
				}
			}
		},
		"common-base--FGSchematic--base--mSchematicDependencies--mRequireAllSchematicsToBePurchased": {
			"type": "object",
			"required": [
				"Class",
				"mSchematics",
				"mRequireAllSchematicsToBePurchased"
			],
			"properties": {
				"Class": {
					"type": "string",
					"pattern": "BP_[A-Z][A-z]+_C$"
				},
				"mSchematics": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_mSchematics--mSchematics"
						}
					}
				},
				"mRequireAllSchematicsToBePurchased": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--FGSchematic--base--mSchematicDependencies--mGamePhase": {
			"type": "object",
			"required": ["Class", "mGamePhase"],
			"properties": {
				"Class": {
					"type": "string",
					"const": "BP_GamePhaseReachedDependency_C"
				},
				"mGamePhase": {
					"type": "string",
					"minLength": 1
				}
			}
		},
		"common-base--FGSchematic--mUnlocks": {
			"oneOf": [
				{
					"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_mTapeUnlocks"
				},
				{
					"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_mRecipes"
				},
				{
					"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_resources_to_scan"
				},
				{
					"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_mEmotes"
				},
				{
					"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_mSchematics"
				},
				{
					"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_inventory_slots"
				},
				{
					"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_equipment_slots"
				},
				{
					"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_mScannableObjects"
				},
				{
					"$ref": "common.schema.json#/$defs/FGSchematic--mUnlocks_mItemsToGive"
				}
			]
		},
		"common-base--FGSchematic--with-unlocks": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGSchematic--base",
			"required": [
				"mUnlockName",
				"mUnlockDescription",
				"mUnlockIconBig",
				"mUnlockIconSmall",
				"mUnlockIconCategory"
			],
			"properties": {
				"mUnlockName": {
					"type": "string",
					"minLength": 1
				},
				"mUnlockDescription": {
					"type": "string"
				},
				"mUnlockIconBig": {
					"type": "string",
					"const": "Unsupported texture. Contact developer for support"
				},
				"mUnlockIconSmall": {
					"type": "string",
					"const": "Unsupported texture. Contact developer for support"
				},
				"mUnlockIconCategory": {
					"type": "string",
					"const": "Unsupported texture. Contact developer for support"
				}
			}
		},
		"common-base--FGBuildableWall--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": ["mHeight", "mDisplayName", "mDescription"],
			"properties": {
				"mHeight": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGBuildableWall--base--rectangle": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildableWall--base",
			"required": [
				"mWidth",
				"mElevation",
				"mAngularDepth",
				"mWallType",
				"mAngledVariants"
			],
			"properties": {
				"mWidth": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mElevation": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mAngularDepth": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mWallType": {
					"type": "string",
					"enum": [
						"BWT_Normal",
						"BWT_Glass",
						"BWT_DiagonalDown",
						"BWT_DiagonalUp",
						"BWT_Frame"
					]
				},
				"mAngledVariants": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"minItems": 1,
								"items": {
									"type": "string",
									"minLength": 1,
									"UnrealEngineString": {
										"right": {
											"starts_with": "/Game/FactoryGame/Buildable/Building/Fence/"
										}
									}
								}
							}
						}
					]
				}
			}
		},
		"common-base--FGBuildableCornerWall": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildableWall--base",
			"required": ["mSize", "mIsInverted"],
			"properties": {
				"mSize": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mIsInverted": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--FGBuildableDoor--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildableWall--base--rectangle",
			"required": [
				"mCanBeLocked",
				"mAnimationRate",
				"mMovementRate",
				"EasingFunction",
				"BlendExp",
				"Steps"
			],
			"properties": {
				"mCanBeLocked": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mAnimationRate": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mMovementRate": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"EasingFunction": {
					"type": "string",
					"enum": ["ExpoInOut", "Linear"]
				},
				"BlendExp": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"Steps": {
					"$ref": "common.schema.json#/$defs/integer-string"
				}
			}
		},
		"common-base--FGBuildableDoor": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildableDoor--base",
			"required": ["IsDoorOpen"],
			"properties": {
				"IsDoorOpen": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--FGBuildableDoor--automated": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildableDoor--base",
			"required": ["bigOverlapList"],
			"properties": {
				"bigOverlapList": {
					"type": "string",
					"const": ""
				}
			}
		},
		"common-base--FGResourceDescriptor": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGItemDescriptor--FGResourceDescriptor",
			"required": [
				"mDecalSize",
				"mPingColor",
				"mCollectSpeedMultiplier",
				"mManualMiningAudioName"
			],
			"properties": {
				"mDecalSize": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mPingColor": {
					"$ref": "common.schema.json#/$defs/color-decimal"
				},
				"mCollectSpeedMultiplier": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mManualMiningAudioName": {
					"type": "string",
					"minLength": 1
				}
			}
		},
		"common-base--FGBuildableRailroadTrack": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": [
				"mMeshLength",
				"mConnections",
				"mIsOwnedByPlatform",
				"mTrackGraphID",
				"mOverlappingTracks",
				"mVehicles",
				"mSignalBlockID",
				"mBlockVisualizationColorDataStartIndex"
			],
			"properties": {
				"ClassName": {
					"type": "string",
					"const": "Build_RailroadTrack_C"
				},
				"mMeshLength": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mConnections": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"type": "string",
							"minLength": 1,
							"UnrealEngineString": {
								"left": "/Script/FactoryGame.FGRailroadTrackConnectionComponent",
								"right": {
									"starts_with": "/Game/FactoryGame/Buildable/Factory/Train/Track/"
								}
							}
						}
					}
				},
				"mIsOwnedByPlatform": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mTrackGraphID": {
					"$ref": "common.schema.json#/$defs/integer-string--signed"
				},
				"mOverlappingTracks": {
					"type": "string",
					"const": ""
				},
				"mVehicles": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mSignalBlockID": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mBlockVisualizationColorDataStartIndex": {
					"$ref": "common.schema.json#/$defs/integer-string"
				}
			}
		},
		"common-base--FGBuildableWire": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": [
				"mMaxLength",
				"mMaxPowerTowerLength",
				"mLengthPerCost",
				"mConnections",
				"mConnectionLocations",
				"mWireInstances",
				"mCachedLength"
			],
			"properties": {
				"mMaxLength": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mMaxPowerTowerLength": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mLengthPerCost": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mConnections": {
					"$ref": "common.schema.json#/$defs/None"
				},
				"mConnectionLocations": {
					"$ref": "common.schema.json#/$defs/xyz"
				},
				"mWireInstances": {
					"type": "string",
					"const": ""
				},
				"mCachedLength": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGBuildablePowerPole": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": [
				"mPowerConnections",
				"mPowerPoleType",
				"mPowerTowerWireMaxLength",
				"mHasPower"
			],
			"properties": {
				"mPowerConnections": {
					"type": "string",
					"const": ""
				},
				"mPowerPoleType": {
					"type": "string",
					"enum": [
						"PPT_POLE",
						"PPT_WALL",
						"PPT_TOWER",
						"PPT_WALL_DOUBLE"
					]
				},
				"mPowerTowerWireMaxLength": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mHasPower": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--FGBuildableTradingPost": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--consumes-power-base",
			"required": [
				"mWorkBenchOccupied",
				"mWorkBenchFree",
				"Meshes",
				"mShipUpgradeLevel",
				"mStorageText",
				"mMamFreeText",
				"mMamOccupiedText",
				"ABClass",
				"mSkeletalMeshSoftPtr",
				"mGenerators",
				"mStorageInventorySize",
				"mStorageVisibilityLevel",
				"mSpawningGroundZOffset",
				"mGroundSearchZDistance",
				"mDefaultResources",
				"mRepresentationText"
			],
			"properties": {
				"mWorkBenchOccupied": {
					"type": "string",
					"minLength": 1
				},
				"mWorkBenchFree": {
					"type": "string",
					"minLength": 1
				},
				"Meshes": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 1,
						"items": {
							"type": "string",
							"minLength": 1,
							"UnrealEngineString": {
								"left": "/Script/Engine.StaticMesh"
							}
						}
					}
				},
				"mShipUpgradeLevel": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mStorageText": {
					"type": "string",
					"const": "Open Storage"
				},
				"mMamFreeText": {
					"type": "string",
					"minLength": 1
				},
				"mMamOccupiedText": {
					"type": "string",
					"minLength": 1
				},
				"ABClass": {
					"type": "string",
					"const": "/Game/FactoryGame/Buildable/Factory/TradingPost/BPA_Tradingpost.BPA_Tradingpost_C"
				},
				"mSkeletalMeshSoftPtr": {
					"type": "string",
					"const": "/Game/FactoryGame/Buildable/Factory/TradingPost/Mesh/SK_Tradingpost.SK_Tradingpost"
				},
				"mGenerators": {
					"type": "string",
					"const": ""
				},
				"mStorageInventorySize": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mStorageVisibilityLevel": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mSpawningGroundZOffset": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mGroundSearchZDistance": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDefaultResources": {
					"type": "string",
					"const": ""
				},
				"mRepresentationText": {
					"type": "string",
					"const": "The HUB"
				}
			}
		},
		"common-base--FGEquipment--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/class--no-description-or-display-name",
			"required": [
				"mEquipmentSlot",
				"mAttachSocket",
				"mNeedsDefaultEquipmentMappingContext",
				"mCostToUse",
				"mArmAnimation",
				"mBackAnimation",
				"mDefaultEquipmentActions",
				"mReceivedDamageModifiers",
				"mSwappedOutThirdPersonMaterials"
			],
			"properties": {
				"mRandomAnim": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mCanPress": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mAnimData": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"minItems": 3,
						"maxItems": 3,
						"items": {
							"type": "string",
							"minLength": 1,
							"typed_string": {
								"required": [
									"Montage_7_2E66F6A948A8606E71185682EA2AC4EC",
									"CameraAnimationSequence_11_920C446448786C507704569A05006500"
								],
								"properties": {
									"Montage_7_2E66F6A948A8606E71185682EA2AC4EC": {
										"type": "string",
										"minLength": 1,
										"UnrealEngineString": {
											"left": "/Script/Engine.AnimMontage",
											"right": [
												"/Game/FactoryGame/Character/Player/Animation/FirstPerson/MedkitUse_01_Montage.MedkitUse_01_Montage",
												"/Game/FactoryGame/Character/Player/Animation/FirstPerson/MedkitUse_02_Montage.MedkitUse_02_Montage",
												"/Game/FactoryGame/Character/Player/Animation/FirstPerson/MedkitUse_03_Montage.MedkitUse_03_Montage"
											]
										}
									},
									"CameraAnimationSequence_11_920C446448786C507704569A05006500": {
										"type": "string",
										"minLength": 1,
										"UnrealEngineString": {
											"left": "/Script/TemplateSequence.CameraAnimationSequence",
											"right": [
												"/Game/FactoryGame/Character/Player/CameraShake/MedkitUse_01_CameraAnimSequence.MedkitUse_01_CameraAnimSequence",
												"/Game/FactoryGame/Character/Player/CameraShake/MedkitUse_02_CameraAnimSequence.MedkitUse_02_CameraAnimSequence",
												"/Game/FactoryGame/Character/Player/CameraShake/MedkitUse_03_CameraAnimSequence.MedkitUse_03_CameraAnimSequence"
											]
										}
									}
								}
							}
						}
					}
				},
				"mCurrentAnimData": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mEquipmentSlot": {
					"type": "string",
					"enum": [
						"ES_ARMS",
						"ES_BACK",
						"ES_BODY",
						"ES_HEAD",
						"ES_LEGS"
					]
				},
				"mAttachSocket": {
					"type": "string",
					"minLength": 1
				},
				"mNeedsDefaultEquipmentMappingContext": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mCostToUse": {
					"oneOf": [
						{
							"type": "string",
							"const": ""
						},
						{
							"$ref": "common.schema.json#/$defs/ItemClass"
						}
					]
				},
				"mArmAnimation": {
					"type": "string",
					"enum": [
						"AE_ShockShank",
						"AE_StunSpear",
						"AE_Generic2Hand",
						"AE_Generic1Hand",
						"AE_None",
						"AE_ChainSaw",
						"AE_RebarGun",
						"AE_Rifle",
						"AE_Nobelisk"
					]
				},
				"mBackAnimation": {
					"type": "string",
					"enum": ["BE_None", "BE_Jetpack"]
				},
				"mDefaultEquipmentActions": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mReceivedDamageModifiers": {
					"type": "string",
					"const": ""
				},
				"mSwappedOutThirdPersonMaterials": {
					"$ref": "common.schema.json#/$defs/empty-object"
				}
			}
		},
		"mAspect": {
			"type": "string",
			"const": "RSA_None"
		},
		"mPlatformDockingStatus": {
			"type": "string",
			"const": "ETPDS_None"
		},
		"mDockingRuleSet": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"required": ["DockForDuration"],
				"properties": {
					"DockForDuration": {
						"$ref": "common.schema.json#/$defs/decimal-string"
					}
				}
			}
		},
		"mBatteryStatus": {
			"type": "string",
			"const": "BS_Idle"
		},
		"InfinityExtrap": {
			"type": "string",
			"const": "RCCE_Constant"
		},
		"mDamageTypes": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"minItems": 1,
				"items": {
					"type": "string",
					"minLength": 1,
					"UnrealEngineString": {
						"left": [
							"/Game/FactoryGame/-Shared/Blueprint/DamageTypes/BP_PointDamageType_Energy.BP_PointDamageType_Energy_C",
							"/Game/FactoryGame/-Shared/Blueprint/DamageTypes/BP_PointDamageType_Gas.BP_PointDamageType_Gas_C",
							"/Game/FactoryGame/-Shared/Blueprint/DamageTypes/BP_RadialDamageType_Gas.BP_RadialDamageType_Gas_C",
							"/Game/FactoryGame/-Shared/Blueprint/DamageTypes/BP_PointDamageType_Physical.BP_PointDamageType_Physical_C",
							"/Game/FactoryGame/-Shared/Blueprint/DamageTypes/BP_RadialDamageType_Explosive.BP_RadialDamageType_Explosive_C"
						]
					}
				}
			}
		},
		"common-base--FGEquipmentStunSpear--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipment--base",
			"required": [
				"mDamageTypes",
				"mAttackDistance",
				"mAttackSweepRadius"
			],
			"properties": {
				"mDamageTypes": {
					"$ref": "common.schema.json#/$defs/mDamageTypes"
				},
				"mAttackDistance": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mAttackSweepRadius": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGEquipmentStunSpear": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipmentStunSpear--base",
			"required": ["mArmAnimation"],
			"properties": {
				"mArmAnimation": {
					"type": "string",
					"const": "AE_StunSpear"
				}
			}
		},
		"common-base--FGEquipmentStunSpear--xeno-zapper": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipmentStunSpear--base",
			"properties": {
				"mArmAnimation": {
					"type": "string",
					"const": "AE_ShockShank"
				}
			}
		},
		"common-base--FGHoverPack": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipment--base",
			"required": [
				"ConnectionLocationUpdatedDelegate",
				"ConnectionStatusUpdatedDelegate",
				"HoverModeChangedDelegate",
				"RangeWarningToggleDelegate",
				"mHoverSpeed",
				"mHoverAccelerationSpeed",
				"mHoverSprintMultiplier",
				"mHoverFriction",
				"mJumpKeyHoldActivationTime",
				"mFallSpeedLimitWhenPowered",
				"mPowerConnectionSearchRadius",
				"mPowerConnectionSearchTickRate",
				"mPowerConnectionDisconnectionTime",
				"mPowerCapacity",
				"mPowerDrainRate",
				"mPowerConsumption",
				"mCurrentPowerLevel",
				"mRangeWarningNormalizedDistanceThreshold",
				"mCurrentHoverMode",
				"mHasConnection",
				"mShouldAutomaticallyHoverWhenConnected",
				"mCrouchHoverCancelTime",
				"mCharacterUseDistanceWhenActive",
				"mActiveNoiseFrequency",
				"mCurrentConnectionLocation"
			],
			"properties": {
				"ConnectionLocationUpdatedDelegate": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"ConnectionStatusUpdatedDelegate": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"HoverModeChangedDelegate": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"RangeWarningToggleDelegate": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mHoverSpeed": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mHoverAccelerationSpeed": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mHoverSprintMultiplier": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mHoverFriction": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mJumpKeyHoldActivationTime": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mFallSpeedLimitWhenPowered": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mPowerConnectionSearchRadius": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mPowerConnectionSearchTickRate": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mPowerConnectionDisconnectionTime": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mPowerCapacity": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mPowerDrainRate": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mPowerConsumption": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCurrentPowerLevel": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mRangeWarningNormalizedDistanceThreshold": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCurrentHoverMode": {
					"type": "string",
					"const": "HPM_Inactive"
				},
				"mHasConnection": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mShouldAutomaticallyHoverWhenConnected": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mCrouchHoverCancelTime": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCharacterUseDistanceWhenActive": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mActiveNoiseFrequency": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCurrentConnectionLocation": {
					"$ref": "common.schema.json#/$defs/xyz"
				}
			}
		},
		"common-base--FGJetPack": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipment--base",
			"required": [
				"FuelTypeDescriptos",
				"mOnFuelAmountChanged",
				"mOnBurnPercentChanged",
				"mOnFuelTypeChanged",
				"mDefaultAirControl",
				"mRTPCInterval",
				"mCurrentFuel",
				"mIsThrusting",
				"mSelectedFuelType",
				"mCurrentFuelType",
				"mActiveNoiseFrequency"
			],
			"properties": {
				"FuelTypeDescriptos": {
					"type": "string",
					"const": ""
				},
				"mOnFuelAmountChanged": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mOnBurnPercentChanged": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mOnFuelTypeChanged": {
					"$ref": "common.schema.json#/$defs/empty-object"
				},
				"mDefaultAirControl": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mRTPCInterval": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCurrentFuel": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mIsThrusting": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mSelectedFuelType": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mCurrentFuelType": {
					"$ref": "common.schema.json#/$defs/integer-string"
				},
				"mActiveNoiseFrequency": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGSuitBase": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipment--base",
			"required": [
				"mImmunity",
				"mIsWorking",
				"mHasNegatedDamage",
				"mDamageNegated",
				"mFilterDuration",
				"mCountdown",
				"mDisableEffectTimer",
				"mIsBurningFuel"
			],
			"properties": {
				"mImmunity": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mIsWorking": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mHasNegatedDamage": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mDamageNegated": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mFilterDuration": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCountdown": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDisableEffectTimer": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mIsBurningFuel": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--FGGasMask": {
			"type": "object",
			"$ref": "#/$defs/common-base--FGEquipment--base",
			"required": [
				"mDamageTypesToProtectAgainst",
				"mPostProcessEnabled",
				"mFilterCountdown",
				"mFilterDuration",
				"mIsInPoisonGas"
			],
			"properties": {
				"mDamageTypesToProtectAgainst": {
					"$ref": "common.schema.json#/$defs/mDamageTypes"
				},
				"mPostProcessEnabled": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mFilterCountdown": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mFilterDuration": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mIsInPoisonGas": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--mChainsawState": {
			"$ref": "common.schema.json#/$defs/None"
		},
		"common-base--FGChainsaw": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipment--base",
			"required": [
				"mInterpSawProgress",
				"mCurrentOutputDataSFX",
				"mCurrentHasFuel",
				"mPreviousState",
				"mEnergyConsumption",
				"mSawDownTreeTime",
				"mCollateralPickupRadius",
				"mEnergyStored",
				"mSawingProgress",
				"mChainsawState"
			],
			"properties": {
				"mInterpSawProgress": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCurrentOutputDataSFX": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCurrentHasFuel": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mPreviousState": {
					"$ref": "common.schema.json#/$defs/common-base--mChainsawState"
				},
				"mEnergyConsumption": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mSawDownTreeTime": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCollateralPickupRadius": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mEnergyStored": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mSawingProgress": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mChainsawState": {
					"$ref": "common.schema.json#/$defs/common-base--mChainsawState"
				}
			}
		},
		"common-base--FGObjectScanner": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipment--base",
			"required": [
				"mBeepDelayMax",
				"mBeepDelayMin",
				"mDetectionRange",
				"mUpdateClosestObjectTime",
				"mClosestObjectInScanRange",
				"mNormalizedDistanceToClosestObject",
				"mAngleToClosestObject"
			],
			"properties": {
				"mBeepDelayMax": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mBeepDelayMin": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mDetectionRange": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mUpdateClosestObjectTime": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mClosestObjectInScanRange": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mNormalizedDistanceToClosestObject": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mAngleToClosestObject": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGJumpingStilts": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipment--base",
			"required": ["mSprintSpeedFactor", "mJumpSpeedFactor"],
			"properties": {
				"mSprintSpeedFactor": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mJumpSpeedFactor": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGEquipmentZipline": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipment--base",
			"required": [
				"mZiplineJumpLaunchVelocity",
				"mMaxZiplineAngle",
				"mTraceDistance",
				"mTraceStartOffset",
				"mTraceRadius",
				"mVisualizeTraceDistance",
				"mActiveNoiseFrequency",
				"mZiplineReattachCooldown"
			],
			"properties": {
				"mZiplineJumpLaunchVelocity": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mMaxZiplineAngle": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mTraceDistance": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mTraceStartOffset": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mTraceRadius": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mVisualizeTraceDistance": {
					"$ref": "common.schema.json#/$defs/boolean"
				},
				"mActiveNoiseFrequency": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mZiplineReattachCooldown": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGParachute": {
			"type": "object",
			"$ref": "#/$defs/common-base--FGEquipment--base",
			"required": [
				"DeployedVFXComponents",
				"mUseDistanceOverride",
				"mIsDeployed"
			],
			"properties": {
				"DeployedVFXComponents": {
					"type": "string",
					"const": ""
				},
				"mUseDistanceOverride": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mIsDeployed": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--FGEquipmentDescriptor--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGItemDescriptor--FGResourceDescriptor--FGPoleDescriptor",
			"required": ["mResourceSinkPoints"],
			"properties": {
				"mResourceSinkPoints": {
					"$ref": "common.schema.json#/$defs/integer-string"
				}
			}
		},
		"common-base--FGEquipmentDescriptor": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipmentDescriptor--base"
		},
		"common-base--FGConsumableDescriptor--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGEquipmentDescriptor--base",
			"required": [
				"mCustomHandsMeshScale",
				"mCustomRotation",
				"mCustomLocation"
			],
			"properties": {
				"mCustomHandsMeshScale": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mCustomRotation": {
					"$ref": "common.schema.json#/$defs/pitch-yaw-roll"
				},
				"mCustomLocation": {
					"$ref": "common.schema.json#/$defs/xyz"
				}
			}
		},
		"common-base--FGConsumableDescriptor": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGConsumableDescriptor--base"
		},
		"common-base--FGConsumableDescriptor--healing": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGConsumableDescriptor--base",
			"required": ["mHealthGain"],
			"properties": {
				"mHealthGain": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGBuildablePillarLightweight": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": ["mSize", "mIsSupport"],
			"properties": {
				"mSize": {
					"$ref": "common.schema.json#/$defs/xyz"
				},
				"mIsSupport": {
					"$ref": "common.schema.json#/$defs/boolean"
				}
			}
		},
		"common-base--FGBuildableFactory--jump-pad": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--consumes-power-base",
			"required": ["JumpForceCharacter", "JumpForcePhysics"],
			"properties": {
				"JumpForceCharacter": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"JumpForcePhysics": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--FGBuildableFactory--landing-pad": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--consumes-power-base",
			"required": ["mDampeningFactor", "mPlayerList"],
			"properties": {
				"mDampeningFactor": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mPlayerList": {
					"type": "string",
					"const": ""
				}
			}
		},
		"common-base--FGBuildableFactory--generic": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--consumes-power-base"
		},
		"common-base--FGBuildableWalkway--base": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildable--base",
			"required": ["mSize", "mElevation", "mDisableSnapOn"],
			"properties": {
				"mSize": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				},
				"mElevation": {
					"$ref": "common.schema.json#/$defs/decimal-string"
				}
			}
		},
		"common-base--mDisableSnapOn": {
			"type": "string",
			"minLength": 1,
			"typed_string": {
				"minProperties": 1,
				"patternProperties": {
					"^(Front|Right|Left|Right|Top|Bottom)$": {
						"$ref": "common.schema.json#/$defs/boolean"
					}
				}
			}
		},
		"common-base--FGBuildableWalkwayLightweight": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildableWalkway--base",
			"properties": {
				"mDisableSnapOn": {
					"$ref": "common.schema.json#/$defs/common-base--mDisableSnapOn"
				}
			}
		},
		"common-base--FGBuildableWalkway": {
			"type": "object",
			"$ref": "common.schema.json#/$defs/common-base--FGBuildableWalkway--base",
			"properties": {
				"mDisableSnapOn": {
					"type": "string",
					"minLength": 1,
					"typed_string": {
						"required": ["Right", "Left", "Top", "Bottom"],
						"properties": {
							"Right": {
								"$ref": "common.schema.json#/$defs/boolean"
							},
							"Left": {
								"$ref": "common.schema.json#/$defs/boolean"
							},
							"Top": {
								"$ref": "common.schema.json#/$defs/boolean"
							},
							"Bottom": {
								"$ref": "common.schema.json#/$defs/boolean"
							}
						}
					}
				}
			}
		},
		"faux-1": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux"],
			"unevaluatedProperties": false,
			"properties": {
				"faux": {
					"anyOf": [
						{
							"$ref": "#/$defs/UnrealEngineString--array"
						},
						{
							"$ref": "#/$defs/decimal-string"
						},
						{
							"$ref": "#/$defs/decimal-string--signed"
						},
						{
							"$ref": "#/$defs/integer-string"
						},
						{
							"$ref": "#/$defs/integer-string--signed"
						},
						{
							"$ref": "#/$defs/color"
						},
						{
							"$ref": "#/$defs/color-decimal"
						},
						{
							"$ref": "#/$defs/empty-object"
						},
						{
							"$ref": "#/$defs/None"
						},
						{
							"$ref": "#/$defs/xyz"
						},
						{
							"$ref": "#/$defs/xy"
						},
						{
							"$ref": "#/$defs/xy--integer"
						},
						{
							"$ref": "#/$defs/quaternion"
						},
						{
							"$ref": "#/$defs/pitch-yaw-roll"
						},
						{
							"$ref": "#/$defs/xyz--integer"
						},
						{
							"$ref": "#/$defs/xyz-array"
						},
						{
							"$ref": "#/$defs/transformation"
						},
						{
							"$ref": "#/$defs/common-base--FGSchematic--base"
						}
					]
				}
			}
		},
		"faux-2": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux_bool"],
			"unevaluatedProperties": false,
			"properties": {
				"faux_bool": {
					"$ref": "#/$defs/boolean"
				}
			}
		},
		"faux-3": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux_bool_extended"],
			"unevaluatedProperties": false,
			"properties": {
				"faux_bool_extended": {
					"$ref": "#/$defs/boolean-extended"
				}
			}
		},
		"faux-4": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux_texture"],
			"unevaluatedProperties": false,
			"properties": {
				"faux_texture": {
					"$ref": "#/$defs/Texture2D"
				}
			}
		},
		"faux-5": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux_none"],
			"unevaluatedProperties": false,
			"properties": {
				"faux_none": {
					"$ref": "#/$defs/None"
				}
			}
		},
		"faux-6": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["mForm"],
			"unevaluatedProperties": false,
			"properties": {
				"mForm": {
					"$ref": "#/$defs/mForm"
				}
			}
		},
		"faux-7": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["ItemClass_opt"],
			"unevaluatedProperties": false,
			"properties": {
				"ItemClass_opt": {
					"$ref": "#/$defs/ItemClass"
				}
			}
		},
		"faux-8": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["ItemClass"],
			"unevaluatedProperties": false,
			"properties": {
				"ItemClass": {
					"$ref": "#/$defs/ItemClass--amount-required"
				}
			}
		},
		"faux-9": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux", "mSubCategories"],
			"unevaluatedProperties": false,
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGItemDescriptor--FGResourceDescriptor--FGPoleDescriptor--mSubCategories"
				},
				"mSubCategories": {
					"$ref": "#/$defs/common-base--FGItemDescriptor--FGResourceDescriptor--FGPoleDescriptor--mSubCategories"
				}
			}
		},
		"faux-9b": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux"],
			"unevaluatedProperties": false,
			"properties": {
				"faux": {
					"type": "string",
					"const": "stashing all the remaining descriptors here"
				},
				"FGItemDescriptor_FGResourceDescriptor_FGPoleDescriptor": {
					"$ref": "#/$defs/common-base--FGItemDescriptor--FGResourceDescriptor--FGPoleDescriptor"
				},
				"FGPoleDescriptor": {
					"$ref": "#/$defs/common-base--FGPoleDescriptor"
				},
				"FGEquipmentDescriptor_base": {
					"$ref": "#/$defs/common-base--FGEquipmentDescriptor--base"
				},
				"FGEquipmentDescriptor": {
					"$ref": "#/$defs/common-base--FGEquipmentDescriptor"
				},
				"FGConsumableDescriptor_base": {
					"$ref": "#/$defs/common-base--FGConsumableDescriptor--base"
				},
				"FGConsumableDescriptor": {
					"$ref": "#/$defs/common-base--FGConsumableDescriptor"
				},
				"FGConsumableDescriptor_healing": {
					"$ref": "#/$defs/common-base--FGConsumableDescriptor--healing"
				}
			}
		},
		"faux-10": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux", "mForm", "mSubCategories"],
			"unevaluatedProperties": false,
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGBuildingDescriptor--properties"
				},
				"ClassName": {
					"$ref": "#/$defs/common-base--FGBuildingDescriptor--ClassName"
				},
				"mForm": {
					"$ref": "#/$defs/common-base--FGBuildingDescriptor--mForm"
				},
				"mSubCategories": {
					"$ref": "#/$defs/common-base--FGBuildingDescriptor--mSubCategories"
				}
			}
		},
		"faux-10b": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux", "FGBuildingDescriptor"],
			"unevaluatedProperties": false,
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGBuildingDescriptor"
				},
				"FGBuildingDescriptor": {
					"$ref": "#/$defs/common-base--FGBuildingDescriptor"
				}
			}
		},
		"faux-11": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux", "FGBuildable"],
			"unevaluatedProperties": false,
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGBuildable--base"
				},
				"FGBuildable_base": {
					"$ref": "#/$defs/common-base--FGBuildable--base"
				},
				"FGBuildable_consumes_power_base": {
					"$ref": "#/$defs/common-base--FGBuildable--consumes-power-base"
				},
				"FGBuildable_docking_station_base": {
					"$ref": "#/$defs/common-base--FGBuildable--docking-station-base"
				},
				"FGBuildableDroneStation": {
					"$ref": "#/$defs/common-base--FGBuildableDroneStation"
				},
				"FGBuildableBlueprintDesigner": {
					"$ref": "#/$defs/common-base--FGBuildableBlueprintDesigner"
				},
				"FGBuildableFactory_jump_pad": {
					"$ref": "#/$defs/common-base--FGBuildableFactory--jump-pad"
				},
				"FGBuildableFactory_landing_pad": {
					"$ref": "#/$defs/common-base--FGBuildableFactory--landing-pad"
				},
				"FGBuildable_occupied": {
					"$ref": "#/$defs/common-base--FGBuildable--occupied"
				},
				"FGBuildable_tiered": {
					"$ref": "#/$defs/common-base--FGBuildable--tiered"
				},
				"FGBuildableMAM": {
					"$ref": "#/$defs/common-base--FGBuildableMAM"
				},
				"FGBuildableRailroadTrack": {
					"$ref": "#/$defs/common-base--FGBuildableRailroadTrack"
				},
				"FGBuildableWire": {
					"$ref": "#/$defs/common-base--FGBuildableWire"
				},
				"FGBuildablePowerPole": {
					"$ref": "#/$defs/common-base--FGBuildablePowerPole"
				},
				"FGBuildableTradingPost": {
					"$ref": "#/$defs/common-base--FGBuildableTradingPost"
				},
				"FGBuildablePillarLightweight": {
					"$ref": "#/$defs/common-base--FGBuildablePillarLightweight"
				},
				"FGBuildableFactory_generic": {
					"$ref": "#/$defs/common-base--FGBuildableFactory--generic"
				},
				"FGBuildableWalkway_base": {
					"$ref": "#/$defs/common-base--FGBuildableWalkway--base"
				},
				"mDisableSnapOn": {
					"$ref": "#/$defs/common-base--mDisableSnapOn"
				},
				"FGBuildableWalkwayLightweight": {
					"$ref": "#/$defs/common-base--FGBuildableWalkwayLightweight"
				},
				"FGBuildableWalkway": {
					"$ref": "#/$defs/common-base--FGBuildableWalkway"
				}
			}
		},
		"faux-12": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux", "mEventType--optional-csv"],
			"unevaluatedProperties": false,
			"properties": {
				"faux": {
					"type": "string",
					"const": "mEventType--optional-csv"
				},
				"mEventType__optional_csv": {
					"$ref": "#/$defs/mEventType--optional-csv"
				}
			}
		},
		"faux-13": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": [
				"faux",
				"FGSchematic__mUnlocks_mSchematics__mSchematics"
			],
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGSchematic--mUnlocks_mSchematics--mSchematics"
				},
				"FGSchematic__mUnlocks_mSchematics__mSchematics": {
					"$ref": "#/$defs/FGSchematic--mUnlocks_mSchematics--mSchematics"
				}
			}
		},
		"faux-14": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux", "common_base__FGSchematic__mUnlocks"],
			"properties": {
				"faux": {
					"type": "string",
					"const": "common-base--FGSchematic--mUnlocks"
				},
				"common_base__FGSchematic__mUnlocks": {
					"$ref": "#/$defs/common-base--FGSchematic--mUnlocks"
				},
				"optional": {
					"oneOf": [
						{
							"$ref": "#/$defs/FGSchematic--mUnlocks_mTapeUnlocks"
						},
						{
							"$ref": "#/$defs/FGSchematic--mUnlocks_mRecipes"
						},
						{
							"$ref": "#/$defs/FGSchematic--mUnlocks_resources_to_scan"
						},
						{
							"$ref": "#/$defs/FGSchematic--mUnlocks_mEmotes"
						},
						{
							"$ref": "#/$defs/FGSchematic--mUnlocks_mSchematics"
						},
						{
							"$ref": "#/$defs/FGSchematic--mUnlocks_inventory_slots"
						},
						{
							"$ref": "#/$defs/FGSchematic--mUnlocks_equipment_slots"
						},
						{
							"$ref": "#/$defs/FGSchematic--mUnlocks_mScannableObjects"
						},
						{
							"$ref": "#/$defs/FGSchematic--mUnlocks_mItemsToGive"
						}
					]
				},
				"optional2": {
					"$ref": "#/$defs/common-base--FGSchematic--base--mSchematicDependencies--mRequireAllSchematicsToBePurchased"
				},
				"optional3": {
					"$ref": "#/$defs/common-base--FGSchematic--base--mSchematicDependencies--mGamePhase"
				}
			}
		},
		"faux-15": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux", "common_base__FGEquipment__base"],
			"properties": {
				"faux": {
					"type": "string",
					"const": "common-base--FGEquipment--base"
				},
				"FGSchematic__mUnlocks_mSchematics__mSchematics": {
					"$ref": "#/$defs/common-base--FGEquipment--base"
				},
				"FGEquipmentStunSpear_base": {
					"$ref": "#/$defs/common-base--FGEquipmentStunSpear--base"
				},
				"FGEquipmentStunSpear": {
					"$ref": "#/$defs/common-base--FGEquipmentStunSpear"
				},
				"FGEquipmentStunSpear_xeno_zapper": {
					"$ref": "#/$defs/common-base--FGEquipmentStunSpear--xeno-zapper"
				},
				"hoverpack": {
					"$ref": "#/$defs/common-base--FGHoverPack"
				},
				"jetpack": {
					"$ref": "#/$defs/common-base--FGJetPack"
				},
				"suit": {
					"$ref": "#/$defs/common-base--FGSuitBase"
				},
				"mask": {
					"$ref": "#/$defs/common-base--FGGasMask"
				},
				"chainsaw": {
					"$ref": "#/$defs/common-base--FGChainsaw"
				},
				"chainsaw_state": {
					"$ref": "#/$defs/common-base--mChainsawState"
				},
				"object_scanner": {
					"$ref": "#/$defs/common-base--FGObjectScanner"
				},
				"jumping_stilts": {
					"$ref": "#/$defs/common-base--FGJumpingStilts"
				},
				"zipline": {
					"$ref": "#/$defs/common-base--FGEquipmentZipline"
				},
				"parachute": {
					"$ref": "#/$defs/common-base--FGParachute"
				}
			}
		},
		"faux-16": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["faux"],
			"properties": {
				"faux": {
					"type": "string",
					"const": "faux-16"
				},
				"mAspect": {
					"$ref": "#/$defs/mAspect"
				},
				"mPlatformDockingStatus": {
					"$ref": "#/$defs/mPlatformDockingStatus"
				},
				"mDockingRuleSet": {
					"$ref": "#/$defs/mDockingRuleSet"
				},
				"mBatteryStatus": {
					"$ref": "#/$defs/mBatteryStatus"
				},
				"InfinityExtrap": {
					"$ref": "#/$defs/InfinityExtrap"
				},
				"mDamageTypes": {
					"$ref": "#/$defs/mDamageTypes"
				}
			}
		},
		"faux-26": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["ref"],
			"properties": {
				"faux": {
					"type": "string",
					"const": "pipeline-stuff"
				},
				"ref": {
					"$ref": "#/$defs/common-base--FGBuildable--pipeline-accessory--base"
				},
				"accessory": {
					"$ref": "#/$defs/common-base--FGBuildable--pipeline-accessory"
				},
				"junction": {
					"$ref": "#/$defs/common-base--FGBuildablePipelineJunction"
				},
				"flow_accessory": {
					"$ref": "#/$defs/common-base--FGBuildable--pipeline-flow-accessory"
				},
				"pump": {
					"$ref": "#/$defs/common-base--FGBuildablePipelinePump"
				},
				"valve": {
					"$ref": "#/$defs/common-base--FGBuildablePipelinePump--valve"
				},
				"reservoir": {
					"$ref": "#/$defs/common-base--FGBuildablePipeReservoir"
				}
			}
		},
		"faux-27": {
			"type": "object",
			"$ref": "#/$defs/class",
			"properties": {
				"faux": {
					"type": "string",
					"const": "pole-stuff"
				},
				"base_no_static": {
					"$ref": "#/$defs/common-base--FGBuildable--pole--base--no-static"
				},
				"base_with_static": {
					"$ref": "#/$defs/common-base--FGBuildable--pole--base--with-static"
				},
				"lightweight": {
					"$ref": "#/$defs/common-base--FGBuildablePoleLightweight"
				}
			}
		},
		"faux-28": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["ref"],
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGItemDescriptor--FGResourceDescriptor"
				},
				"ref": {
					"$ref": "#/$defs/common-base--FGItemDescriptor--FGResourceDescriptor"
				},
				"resource_descriptor": {
					"$ref": "#/$defs/common-base--FGResourceDescriptor"
				}
			}
		},
		"faux-29": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["ref"],
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGRecipe"
				},
				"ref": {
					"$ref": "#/$defs/common-base--FGRecipe"
				}
			}
		},
		"faux-31": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["ref"],
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGSchematic--mUnlocks_Class"
				},
				"ref": {
					"$ref": "#/$defs/common-base--FGSchematic--mUnlocks_Class"
				},
				"schematic_with_unlocks": {
					"$ref": "#/$defs/common-base--FGSchematic--with-unlocks"
				}
			}
		},
		"faux-32": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["base"],
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGBuildableWall--base"
				},
				"base": {
					"$ref": "#/$defs/common-base--FGBuildableWall--base"
				},
				"rectangle": {
					"$ref": "#/$defs/common-base--FGBuildableWall--base--rectangle"
				},
				"corner": {
					"$ref": "#/$defs/common-base--FGBuildableCornerWall"
				},
				"door_base": {
					"$ref": "#/$defs/common-base--FGBuildableDoor--base"
				},
				"door": {
					"$ref": "#/$defs/common-base--FGBuildableDoor"
				},
				"door_autoamted": {
					"$ref": "#/$defs/common-base--FGBuildableDoor--automated"
				}
			}
		},
		"faux-34": {
			"type": "object",
			"$ref": "#/$defs/class",
			"required": ["base"],
			"properties": {
				"faux": {
					"type": "string",
					"const": "FGBuildableConveyorBelt"
				},
				"base": {
					"$ref": "#/$defs/common-base--FGBuildableConveyorBelt--base"
				},
				"belt": {
					"$ref": "#/$defs/common-base--FGBuildableConveyorBelt"
				},
				"lift": {
					"$ref": "#/$defs/common-base--FGBuildableConveyorLift"
				}
			}
		}
	},
	"items": false,
	"minItems": 1,
	"maxItems": 1,
	"prefixItems": [
		{
			"$comment": "/Script/CoreUObject.Class'/Script/FactoryGame.Faux",
			"type": "object",
			"$ref": "#/$defs/NativeClass",
			"unevaluatedProperties": false,
			"properties": {
				"Classes": {
					"type": "array",
					"minItems": 1,
					"items": {
						"oneOf": [
							{
								"type": "object",
								"$ref": "#/$defs/faux-1",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-2",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-3",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-4",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-5",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-6",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-7",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-8",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/common-base--FGItemDescriptor--FGBuildingDescriptor--FGResourceDescriptor",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-9",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-9b",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-10",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-10b",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-11",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-12",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/common-base--FGCustomizationRecipe--FGRecipe",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-13",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-14",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-15",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-16",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-26",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-27",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-28",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-29",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-31",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-32",
								"unevaluatedProperties": false
							},
							{
								"type": "object",
								"$ref": "#/$defs/faux-34",
								"unevaluatedProperties": false
							}
						]
					}
				}
			}
		}
	]
}
